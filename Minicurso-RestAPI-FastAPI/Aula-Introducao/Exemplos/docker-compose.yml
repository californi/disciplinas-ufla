version: '3.8'

services:
  # API de Usu√°rios
  user-api:
    build: .
    ports:
      - "8001:8000"
    environment:
      - SERVICE_NAME=user-api
      - DATABASE_URL=postgresql://user:password@db:5432/users
    depends_on:
      - db
    networks:
      - microservices-network

  # API de Produtos (simulada)
  product-api:
    build: .
    ports:
      - "8002:8000"
    environment:
      - SERVICE_NAME=product-api
      - DATABASE_URL=postgresql://user:password@db:5432/products
    depends_on:
      - db
    networks:
      - microservices-network

  # API Gateway
  api-gateway:
    build: .
    ports:
      - "8000:8000"
    environment:
      - SERVICE_NAME=api-gateway
      - USER_SERVICE_URL=http://user-api:8000
      - PRODUCT_SERVICE_URL=http://product-api:8000
    depends_on:
      - user-api
      - product-api
    networks:
      - microservices-network

  # Banco de dados PostgreSQL
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: microservices
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - microservices-network

  # Redis para cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - microservices-network

  # Nginx para load balancing
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api-gateway
    networks:
      - microservices-network

volumes:
  postgres_data:

networks:
  microservices-network:
    driver: bridge
